package com.feihua.framework.base.impl;

import com.feihua.framework.base.modules.datascope.api.ApiBaseDataScopeService;
import com.feihua.framework.base.modules.office.api.ApiBaseOfficePoService;
import com.feihua.framework.base.modules.office.dto.BaseOfficeDto;
import com.feihua.framework.base.modules.postjob.api.ApiBasePostJobPoService;
import com.feihua.framework.base.modules.postjob.dto.BasePostJobDataScopeDefineDto;
import com.feihua.framework.base.modules.postjob.dto.BasePostJobDto;
import com.feihua.framework.base.modules.postjob.dto.SearchBasePostJobsConditionDto;
import com.feihua.framework.base.modules.postjob.dto.SearchPostJobsConditionDsfDto;
import com.feihua.framework.base.modules.postjob.po.BasePostJobPo;
import com.feihua.framework.constants.DictEnum;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.pojo.PageAndOrderbyParamDto;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-06-06 14:16:20
 */
@Service
public class ApiBasePostJobPoServiceImpl extends ApiBaseServiceImpl<BasePostJobPo, BasePostJobDto, String> implements ApiBasePostJobPoService {
    @Autowired
    com.feihua.framework.base.mapper.BasePostJobPoMapper basePostJobPoMapper;
    @Autowired
    private ApiBaseDataScopeService<BasePostJobDataScopeDefineDto> apiBasePostJobDataScopeService;

    @Autowired
    private ApiBaseOfficePoService apiBaseOfficePoService;

    public ApiBasePostJobPoServiceImpl() {
        super(BasePostJobDto.class);
    }

    @Override
    public PageResultDto<BasePostJobDto> searchBasePostJobsDsf(SearchBasePostJobsConditionDto conditionDto, PageAndOrderbyParamDto pageAndOrderbyParamDto) {

        BasePostJobDataScopeDefineDto defineDto = apiBasePostJobDataScopeService.selectDataScopeDefineByUserId(conditionDto.getCurrentUserId(),conditionDto.getCurrentRoleId(),conditionDto.getCurrentPostId());
        // 如果未设置数据范围定义，没有数据
        if (defineDto == null || StringUtils.isEmpty(defineDto.getType()) || DictEnum.PostJobDataScope.no.name().equals(defineDto.getType())) {
            return new PageResultDto(null, null);
        }
        SearchPostJobsConditionDsfDto searchPostJobsConditionDsfDto = new SearchPostJobsConditionDsfDto();
        searchPostJobsConditionDsfDto.setCode(conditionDto.getCode());
        searchPostJobsConditionDsfDto.setName(conditionDto.getName());
        searchPostJobsConditionDsfDto.setType(conditionDto.getType());
        searchPostJobsConditionDsfDto.setIsPublic(conditionDto.getIsPublic());
        searchPostJobsConditionDsfDto.setDataOfficeId(conditionDto.getDataOfficeId());


        // 所有数据
        if(DictEnum.PostJobDataScope.all.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 公共数据
        if(DictEnum.PostJobDataScope.publics.name().equals(defineDto.getType())){

            String selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and is_public = ''{0}'' ", BasePo.YesNo.Y.name());

            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 公共 + 用户所在机构
        if(DictEnum.PostJobDataScope.publics_useroffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByUserId(conditionDto.getCurrentUserId());

            String selfCondition = null;
            if (officeDto == null) {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and is_public = ''{0}'' ",BasePo.YesNo.Y.name());
            }else {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and (is_public = ''{0}'' or data_office_id = ''{1}'') ",BasePo.YesNo.Y.name(),officeDto.getId());
            }
            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 用户所在机构
        if(DictEnum.PostJobDataScope.useroffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByUserId(conditionDto.getCurrentUserId());
            // 如果机构不存在，直接返回空
            if(officeDto == null){
                return new PageResultDto(null, null);
            }
            String selfCondition = com.feihua.utils.string.StringUtils.messageFormat("and data_office_id = ''{0}'' ",officeDto.getId());

            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 公共 + 用户角色所在机构
        if(DictEnum.PostJobDataScope.publics_userroleoffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByRoleId(conditionDto.getCurrentRoleId(),false);
            String selfCondition = null;
            if (officeDto == null) {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and is_public = ''{0}'' ",BasePo.YesNo.Y.name());
            }else {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and (is_public = ''{0}'' or data_office_id = ''{1}'') ",BasePo.YesNo.Y.name(),officeDto.getId());
            }
            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 用户角色所在机构
        if(DictEnum.PostJobDataScope.userroleoffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByRoleId(conditionDto.getCurrentRoleId(),false);
            // 如果机构不存在，直接返回空
            if(officeDto == null){
                return new PageResultDto(null, null);
            }

            String selfCondition = com.feihua.utils.string.StringUtils.messageFormat("and data_office_id = ''{0}'' ",officeDto.getId());

            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 公共 + 用户岗位所在机构
        if(DictEnum.PostJobDataScope.publics_userroleoffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByPostId(conditionDto.getCurrentPostId(),false);
            String selfCondition = null;
            if (officeDto == null) {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and is_public = ''{0}'' ",BasePo.YesNo.Y.name());
            }else {
                selfCondition = com.feihua.utils.string.StringUtils.messageFormat(" and (is_public = ''{0}'' or data_office_id = ''{1}'') ",BasePo.YesNo.Y.name(),officeDto.getId());
            }
            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        // 用户岗位所在机构
        if(DictEnum.PostJobDataScope.userroleoffice.name().equals(defineDto.getType())){
            Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);

            BaseOfficeDto officeDto = apiBaseOfficePoService.selectOfficeByPostId(conditionDto.getCurrentPostId(),false);
            // 如果机构不存在，直接返回空
            if(officeDto == null){
                return new PageResultDto(null, null);
            }
            String selfCondition = com.feihua.utils.string.StringUtils.messageFormat("and data_office_id = ''{0}'' ",officeDto.getId());

            searchPostJobsConditionDsfDto.setSelfCondition(selfCondition);
            List<BasePostJobDto> list = this.wrapDtos(basePostJobPoMapper.searchBasePostJobs(searchPostJobsConditionDsfDto));
            return new PageResultDto(list, this.wrapPage(p));
        }
        return new PageResultDto(null, null);

    }

    @Override
    public BasePostJobDto wrapDto(BasePostJobPo po) {
        if (po == null) { return null; }
        BasePostJobDto dto = new BasePostJobDto();
        dto.setId(po.getId());
        dto.setName(po.getName());
        dto.setCode(po.getCode());
        dto.setType(po.getType());
        dto.setIsPublic(po.getIsPublic());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}