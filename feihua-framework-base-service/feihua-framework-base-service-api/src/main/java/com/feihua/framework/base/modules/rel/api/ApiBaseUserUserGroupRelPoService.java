package com.feihua.framework.base.modules.rel.api;

import com.feihua.framework.base.modules.rel.dto.BaseUserUserGroupRelDto;
import com.feihua.framework.base.modules.rel.dto.BaseUserUserGroupRelDto;
import com.feihua.framework.base.modules.rel.dto.UserGroupBindUsersParamDto;
import com.feihua.framework.base.modules.rel.dto.UserBindUserGroupsParamDto;
import com.feihua.framework.base.modules.rel.po.BaseUserUserGroupRelPo;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-06-20 13:37:34
 */
public interface ApiBaseUserUserGroupRelPoService extends feihua.jdbc.api.service.ApiBaseService<BaseUserUserGroupRelPo, BaseUserUserGroupRelDto, String> {
    /**
     * 根据用户id查询
     * 一个用户可以有多个用户分组，切换用户分组
     * @param userId
     * @return
     */
    public List<BaseUserUserGroupRelDto> selectByUserId(String userId);

    /**
     * 根据用户分组id查询
     * @param userGroupId
     * @return
     */
    public List<BaseUserUserGroupRelDto> selectByUserGroupId(String userGroupId);
    /**
     * 根据用户id和用户分组id查询
     * @param userId
     * @param userGroupId
     * @return
     */
    public BaseUserUserGroupRelDto selectByUserIdAndUserGroupId(String userId,String userGroupId);
    /**
     * 根据用户id标记删除
     * @param userId
     * @param loginUserId
     * @return
     */
    public int deleteFlagByUserId(String userId, String loginUserId);

    /**
     * 根据用户分组id标记删除
     * @param userGroupId
     * @param loginUserId
     * @return
     */
    public int deleteFlagByUserGroupId(String userGroupId, String loginUserId);

    /**
     * 用户绑定用户分组
     * @param userBindUserGroupsParamDto
     * @return 如果绑定的用户分组id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int userBindUserGroups(UserBindUserGroupsParamDto userBindUserGroupsParamDto);

    /**
     * 用户分组绑定用户
     * @param userGroupBindUsersParamDto
     * @return 如果绑定的用户id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int userGroupBindUsers(UserGroupBindUsersParamDto userGroupBindUsersParamDto);
}