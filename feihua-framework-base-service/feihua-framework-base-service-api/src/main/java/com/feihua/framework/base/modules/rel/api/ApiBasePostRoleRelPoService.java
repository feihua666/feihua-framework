package com.feihua.framework.base.modules.rel.api;

import com.feihua.framework.base.modules.rel.dto.BasePostRoleRelDto;
import com.feihua.framework.base.modules.rel.dto.PostBindRolesParamDto;
import com.feihua.framework.base.modules.rel.dto.RoleBindPostsParamDto;
import com.feihua.framework.base.modules.rel.po.BasePostRoleRelPo;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-06-12 14:06:12
 */
public interface ApiBasePostRoleRelPoService extends feihua.jdbc.api.service.ApiBaseService<BasePostRoleRelPo, BasePostRoleRelDto, String> {
    /**
     * 根据岗位id查询
     * 一个岗位只能有一个角色
     * @param postId
     * @return
     */
    public BasePostRoleRelDto selectByPostId(String postId);

    /**
     * 根据角色id查询
     * @param roleId
     * @return
     */
    public List<BasePostRoleRelDto> selectByRoleId(String roleId);
    /**
     * 根据岗位id和角色id查询
     * @param postId
     * @param roleId
     * @return
     */
    public BasePostRoleRelDto selectByPostIdAndRoleId(String postId,String roleId);
    /**
     * 根据岗位id标记删除
     * @param postId
     * @param currentUserId 当前登录用户id
     * @return
     */
    public int deleteFlagByPostId(String postId, String currentUserId);

    /**
     * 根据角色id标记删除
     * @param roleId
     * @param currentUserId 当前登录用户id
     * @return
     */
    public int deleteFlagByRoleId(String roleId, String currentUserId);

    /**
     * 岗位绑定角色
     * @param postBindRolesParamDto
     * @return 如果绑定的角色id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int postBindRoles(PostBindRolesParamDto postBindRolesParamDto);

    /**
     * 角色绑定岗位
     * @param roleBindPostsParamDto
     * @return 如果绑定的岗位id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int roleBindPosts(RoleBindPostsParamDto roleBindPostsParamDto);
}