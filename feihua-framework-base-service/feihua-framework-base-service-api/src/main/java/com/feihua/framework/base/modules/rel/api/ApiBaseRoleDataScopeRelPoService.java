package com.feihua.framework.base.modules.rel.api;

import com.feihua.framework.base.modules.rel.dto.BaseRoleDataScopeRelDto;
import com.feihua.framework.base.modules.rel.dto.DataScopeBindRolesParamDto;
import com.feihua.framework.base.modules.rel.dto.RoleBindDataScopesParamDto;
import com.feihua.framework.base.modules.rel.po.BaseRoleDataScopeRelPo;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-02-01 20:49:08
 */
public interface ApiBaseRoleDataScopeRelPoService extends feihua.jdbc.api.service.ApiBaseService<BaseRoleDataScopeRelPo, BaseRoleDataScopeRelDto, String> {
    /**
     * 根据角色id查询,目前一个角色只支持设置一个数据范围
     * @param roleId
     * @return
     */
    BaseRoleDataScopeRelDto selectByRoleId(String roleId);

    /**
     * 根据数据范围id查询
     * @param dataScopeId
     * @return
     */
    List<BaseRoleDataScopeRelDto> selectByDataScopeId(String dataScopeId);

    /**
     * 根据角色id标记删除
     * @param roleId
     * @return
     */
    int deleteFlagByRoleId(String roleId,String userId);

    /**
     * 根据数据范围id标记删除
     * @param dataScopeId
     * @return
     */
    int deleteFlagByDataScopeId(String dataScopeId,String userId);

    /**
     * 角色绑定数据范围
     * @param roleBindDataScopesParamDto
     * @return 如果绑定的数据范围dataScopeIds为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    int roleBindDataScopes(RoleBindDataScopesParamDto roleBindDataScopesParamDto);

    /**
     * 数据范围绑定角色
     * @param dataScopeBindRolesParamDto
     * @return 如果绑定的角色roleIds为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    int DataScopeBindRoles(DataScopeBindRolesParamDto dataScopeBindRolesParamDto);
}