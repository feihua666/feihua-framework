package com.feihua.framework.base.modules.rel.api;

import com.feihua.framework.base.modules.rel.dto.BaseUserRoleRelDto;
import com.feihua.framework.base.modules.rel.dto.RoleBindUsersParamDto;
import com.feihua.framework.base.modules.rel.dto.UserBindRolesParamDto;
import com.feihua.framework.base.modules.rel.po.BaseUserRoleRelPo;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-01-30 19:59:17
 */
public interface ApiBaseUserRoleRelPoService extends feihua.jdbc.api.service.ApiBaseService<BaseUserRoleRelPo, BaseUserRoleRelDto, String> {
    /**
     * 根据用户id查询
     * 一个用户可以有多个角色，切换角色
     * @param userId
     * @return
     */
    public List<BaseUserRoleRelDto> selectByUserId(String userId);

    /**
     * 根据角色id查询
     * @param roleId
     * @return
     */
    public List<BaseUserRoleRelDto> selectByRoleId(String roleId);
    /**
     * 根据用户id和角色id查询
     * @param userId
     * @param roleId
     * @return
     */
    public BaseUserRoleRelDto selectByUserIdAndRoleId(String userId,String roleId);
    /**
     * 根据用户id标记删除
     * @param userId
     * @param loginUserId
     * @return
     */
    public int deleteFlagByUserId(String userId, String loginUserId);

    /**
     * 根据角色id标记删除
     * @param roleId
     * @param loginUserId
     * @return
     */
    public int deleteFlagByRoleId(String roleId, String loginUserId);

    /**
     * 用户绑定角色
     * @param userBindRolesParamDto
     * @return 如果绑定的角色id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int userBindRoles(UserBindRolesParamDto userBindRolesParamDto);

    /**
     * 角色绑定用户
     * @param roleBindUsersParamDto
     * @return 如果绑定的用户id为空，返回删除的数量，否则绑定的数量，返回值并不代表操作的成功与否
     */
    public int roleBindUsers(RoleBindUsersParamDto roleBindUsersParamDto);
}